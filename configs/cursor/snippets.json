{
  "snippets": [
    {
      "name": "状态对象映射",
      "code": "/**\n * 状态映射对象\n * @type {Object} 状态值到显示文本的映射\n */\nconst statusTextMap = {\n  'normal': '正常',\n  'warning': '警告',\n  'error': '错误',\n  'info': '信息'\n};\n\n// 获取对应状态的显示文本\nconst getStatusText = (status) => {\n  return statusTextMap[status] || statusTextMap.normal;\n};"
    },
    {
      "name": "数组包含判断",
      "code": "/**\n * 有效的类型列表\n * @type {Array<string>}\n */\nconst validTypes = [\n  'type1',\n  'type2',\n  'type3',\n  'type4'\n];\n\n// 检查类型是否有效\nconst isValidType = (type) => {\n  return validTypes.includes(type);\n};"
    },
    {
      "name": "Vue状态组件",
      "code": "<template>\n  <div class=\"status-indicator\" :class=\"'status-' + status\">\n    {{ statusText }}\n  </div>\n</template>\n\n<script setup>\nimport { computed } from 'vue'\n\nconst props = defineProps({\n  status: {\n    type: String,\n    default: 'normal'\n  }\n})\n\n/**\n * 状态显示文本映射\n * @type {Object} 状态值到显示文本的映射\n */\nconst statusTextMap = {\n  'normal': '正常',\n  'warning': '警告',\n  'error': '错误',\n  'info': '信息'\n}\n\n// 根据状态计算显示文本\nconst statusText = computed(() => {\n  return statusTextMap[props.status] || statusTextMap.normal\n})\n</script>\n\n<style lang=\"scss\" scoped>\n.status-indicator {\n  display: inline-block;\n  padding: 2px 8px;\n  border-radius: 12px;\n  font-size: 12px;\n  \n  &.status-normal {\n    background-color: #4caf50;\n    color: white;\n  }\n  \n  &.status-warning {\n    background-color: #ff9800;\n    color: white;\n  }\n  \n  &.status-error {\n    background-color: #f44336;\n    color: white;\n  }\n  \n  &.status-info {\n    background-color: #2196f3;\n    color: white;\n  }\n}\n</style>"
    },
    {
      "name": "HTTP状态处理",
      "code": "/**\n * HTTP状态码处理\n * @param {number} statusCode - HTTP状态码\n * @returns {string} 错误消息\n */\nconst getErrorMessage = (statusCode) => {\n  // 状态码消息映射\n  const statusMessages = {\n    400: '请求参数错误',\n    401: '未授权，请重新登录',\n    403: '拒绝访问',\n    404: '请求的资源不存在',\n    500: '服务器内部错误'\n  };\n  \n  return statusMessages[statusCode] || `未知错误: ${statusCode}`;\n};"
    },
  ]
}
